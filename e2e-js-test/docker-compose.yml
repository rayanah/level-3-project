version: '2'

services:
  edge-router:
    image: rayanah/edge-router
    ports:
      - '80:80'
    hostname: edge-router
    restart: always
    environment:
      - reschedule:on-node-failure
  catalogue:
    image: rayanah/catalogue
    hostname: catalogue
    restart: always
    environment:
      - reschedule:on-node-failure
  catalogue-db:
    image: rayanah/catalogue-db
    hostname: catalogue-db
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=""
      - MYSQL_ALLOW_EMPTY_PASSWORD=true
      - MYSQL_DATABASE=socksdb
  carts:
    image: rayanah/carts
    hostname: carts
    restart: always
    environment:
      - reschedule:on-node-failure
  carts-db:
    image: mongo
    hostname: carts-db
    restart: always
    environment:
      - reschedule:on-node-failure
  orders:
    image: rayanah/orders
    hostname: orders
    restart: always
    environment:
      - reschedule:on-node-failure
  orders-db:
    image: mongo
    hostname: orders-db
    restart: always
    environment:
      - reschedule:on-node-failure
  shipping:
    image: rayanah/shipping
    hostname: shipping
    restart: always
    environment:
      - reschedule:on-node-failure
  queue-master:
    image: rayanah/queue-master
    hostname: queue-master
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    environment:
      - reschedule:on-node-failure
  rabbitmq:
    image: rabbitmq:3
    hostname: rabbitmq
    restart: always
    environment:
      - reschedule:on-node-failure
  payment:
    image: rayanah/payment
    hostname: payment
    restart: always
    environment:
      - reschedule:on-node-failure
    entrypoint:
      - /app
    command:
      - -port=80
      - -decline=999
  user:
    image: rayanah/user
    hostname: user
    restart: always
    environment:
      - MONGO_HOST=user-db:27017
      - reschedule=on-node-failure
  user-db:
    image: rayanah/user-db
    hostname: user-db
    restart: always
    environment:
      - reschedule=on-node-failure
